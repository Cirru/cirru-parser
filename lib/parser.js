// Generated by CoffeeScript 1.4.0
var arr$, log, num$, obj$, str$, wrap;

log = console.log;

Array.prototype.__defineGetter__('last', function() {
  return this[this.length - 1];
});

Array.prototype.__defineSetter__('last', function(value) {
  return this[this.length - 1] = value;
});

str$ = function(x) {
  return typeof x === 'string';
};

arr$ = Array.isArray;

obj$ = function(x) {
  return (!(arr$(x))) && (typeof x === 'object');
};

num$ = function(x) {
  return !(Number.isNaN(x));
};

wrap = require("./wrap").wrap;

exports.build = function(content) {
  var buffer, cell, char, list, source, tree;
  source = content.split("");
  list = [];
  buffer = "";
  while (source[0] != null) {
    char = source.shift();
    switch (char) {
      case "(":
      case ")":
        if (buffer.length > 0) {
          list.push(buffer);
          buffer = "";
        }
        list.push(char);
        break;
      case " ":
      case "\n":
        if (buffer.length > 0) {
          list.push(buffer);
          buffer = "";
        }
        break;
      default:
        buffer += char;
    }
  }
  tree = (cell = function() {
    var piece, self;
    self = [];
    while (list[0]) {
      piece = list.shift();
      switch (piece) {
        case "(":
          self.push(cell());
          break;
        case ")":
          return self;
        default:
          self.push(piece);
      }
    }
    return self;
  })();
  return tree;
};

exports.parse = function(content) {
  return exports.build(wrap(content));
};
